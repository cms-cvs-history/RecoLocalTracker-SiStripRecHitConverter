process Clusterizer = {
       service = MessageLogger {
                vstring destinations = { "DigiToRecHitRead_err.txt", "DigiToRecHitRead_log.txt","cout","cerr" }
                vstring statistics   = { "statistics.txt"}
                PSet statistics.txt  = { string threshold  = "WARNING"   }
                PSet DigiToRecHit_err.txt = { string threshold = "ERROR"}
		PSet cerr     = { string threshold = "WARNING" }
        }

	source = PoolSource { 
#	       untracked vstring fileNames = {'file:digitized_strips_from_flatptgun.root'}
	       untracked vstring fileNames = {'file:muon_500.root'}
	       untracked int32 maxEvents = 20
	}

        module out = PoolOutputModule {
              untracked string fileName = 'ClusterstoRecHit.root'
        }
 include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
	
 	es_source magfield = XMLIdealGeometryESSource {
                    FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
                    #the proper root node is set in the xml file
                    string rootNodeName=""
        }
        es_module = VolumeBasedMagneticFieldESProducer {
                     double findVolumeTolerance = 0.0
                     untracked bool cacheLastVolume = true
                     untracked bool timerOn = false
        }

        es_source = XMLIdealGeometryESSource {
               FileInPath GeometryConfiguration = "Geometry/TrackerSimData/data/trackerSimConfiguration.xml"
               #the proper root node is set in the xml file
               string rootNodeName = ""
        }

        es_module = TrackerGeometricDetESModule {}
        es_module = TrackerDigiGeometryESModule {}
 include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
 include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
       module ReadLocalMeasurement =  ReadRecHit{
                untracked int32 VerbosityLevel = 1
                string RecHitProducer = "LocalMeasurementConverter"
        }
	path p = { ThreeThresholdClusterizer,LocalMeasurementConverter,ReadLocalMeasurement}
}
